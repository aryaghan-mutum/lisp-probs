#lang racket

(require racket/trace)

#|
Exercise 1.9.
Each of the following two procedures defines a method for adding two positive integers
in terms of the procedures inc, which increments its argument by 1, and dec, which decrements its
argument by 1.

Using the substitution model, illustrate the process generated by each procedure in evaluating (+ 4
5). Are these processes iterative or recursive?
|#

;This function creates recursive process
(define (+ a b)
    (if (= a 0)
        b
        (add1 (+ (sub1 a) b))))

; recursive process 
; (add1 (+ 3 5))
; (add1 (add1 (+ 2 5)))
; (add1 (add1 (add1 (+ 1 5))))
; (add1 (add1 (add1 (add1 (+ 0 5)))))
; (add1 (add1 (add1 (add1 (5)))))
; (add1 (add1 (add1 6)))
; (add1 (add1 7))
; (add1 8)
; 9

(trace +)
(+ 3 4)

#|
-> This function creates a iterative process.
-> The first arguent decreases by 1 every iteration
-> The seocnd argument increases by 1 every iteration
-> When he first argument becomes 0 then the returns b
|#
(define (++ a b)
  (if (= a 0)
      b
      (++ (sub1 a) (add1 b))))

; iterative process 
;(++ 4 5)
;(++ 3 6)
;(++ 2 7)
;(++ 1 8)
;(++ 0 9)

(trace ++)
(+ 3 4)


; Note: inc and dec procedures are not built in in Racket. Therefore they are substituded with add1 and sub1


